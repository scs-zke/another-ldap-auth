# -- should not be changed, due to caching is done on a per pod basis.
# Only use it in very heavy loaded environments
replicaCount: 1

image:
  # -- Path to the image
  repository: ghcr.io/scs-zke/another-ldap-auth
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image tag to use
  tag: ""

# -- Specify docker-registry secret names as an array
imagePullSecrets: []
# -- String to partially override rabbitmq.fullname template (will maintain the release name)
nameOverride: ""
# -- String to fully override rabbitmq.fullname template
fullnameOverride: ""

ldap:
  # -- LDAP endpoint
  endpoint: ""
  # -- Username for LDAP bind requests
  managerDnUsername: ""
  # -- Passwort for `managerDnUsername`, only used when `existingSecret` is not set
  managerDnPassword:
  # -- Use an existing secret for the `managerDnUsername` password
  existingSecret: ""
  # -- Base in directory tree where the search starts
  searchBase: ""
  # -- Filter for search, for Microsoft Active Directory usually you can use `sAMAccountName`
  searchFilter: "(sAMAccountName={username})"
  # -- Depends on your LDAP server the binding structure can change.
  # This field supports variable expansion for the username.
  bindDN: "{username}"
  # -- User attribute specifying group memberships
  groupMembershipAttribute: "memberOf"
  # -- List of allowed users
  allowedUsers: ""
  # -- List of allowed groups
  allowedGroups: ""
  # -- Conditional to match all groups or just one
  allowedGroupsConditional: "and"
  # -- Match allowed groups case sensitive
  allowedGroupsCaseSensitive: "enabled"
  # -- Conditional to match allowed users also with allowed groups
  allowedGroupsUsersConditional: "or"
  # -- List of config headers required for the configuration
  requiredConfigHeaders: ""
  # -- Cache expiration in minutes
  cacheExpiration: 15
  # -- ca certificates for the LDAP connection
  tlsCaCert: ""
  # -- the secret must contain `ca.crt`.  If set, `ldap.tlsCaCert` is ignored
  existingCaSecret: ""

server:
  # -- Key for signing the session cookie, see [Flask documentation](https://flask.palletsprojects.com/en/stable/config/#SECRET_KEY)
  # and a pretty comprehensive [answer](https://stackoverflow.com/questions/22463939/demystify-flask-app-secret-key) on stackoverflow.
  # Usually no need to set it, but if you want to use the same key for multiple pods you can set it here.
  flaskSecretKey: ""
  # -- Enable or disable brute force protection.
  # Brute force protection is blocking user IP, please read this [article](https://owasp.org/www-community/controls/Blocking_Brute_Force_Attacks) to know the limitations about blocking IPs
  bruteForceProtection: false
  # -- Expire entry after number in seconds
  bruteForceExpiration: 10
  # -- Block after number failures
  bruteForceFailures: 3
  # -- Enables or disables the [Gunicorn](https://gunicorn.org/) WSGI Server
  useWsgiServer: true
  # -- Enable automatic reload if certificates where updated
  reloadEnabled: false
  # -- Enable TLS for the pod. If `useWsgiServer` is `true` you also need the `tlsKey` and `tlsCert`.
  #  If `useWsgiServer` is `false` you need not to specify `tlsKey` and `tlsCert` and use the on the fly
  # generated key and certificate
  tlsEnabled: false
  # -- Server private key
  tlsKey: ""
  # -- the secret must contain tls.key, tls.crt and ca.crt. If set, `tlsKey`, `tlsCert` and `tlsCaCert` are ignored
  existingSecret: ""
  # -- Server certificate
  tlsCert: ""
  # -- Server ca certificates
  tlsCaCert: ""
  # -- Number of worker processes for the [Gunicorn](https://gunicorn.org/) WSGI Server
  # Should not be changed, due to caching is done on a per process basis
  # Only use it in very heavy loaded environments
  numberOfWorkers: 1
  # -- Loglevel of the server: `INFO`, `WARNING`, `ERROR`, `DEBUG`
  logLevel: "INFO"
  # -- Logformat of the server: `TEXT` or `JSON`
  logFormat: "TEXT"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Special annotations for the pod
podAnnotations: {}

# -- Special labels for the pod
podLabels: {}

# -- Special security context for the pod
podSecurityContext: {}

# -- Special security context for the container
securityContext: {}

service:
  # -- Type of the service
  type: ClusterIP
  # -- Port of the service:
  # `443` if `server.tlsEnabled` is `true` else `80`
  port: ""
  # -- Protocol of the service
  protocol: TCP
  # -- Port of the container to connect
  containerPort: 9000

# -- Resource requests and limits
resources: {}

# -- Definitions for the [Horizontal Pod Autoscaler (HPA)](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/), usually not needed.
# First try setting `numberOfWorkers`
# @default -- *See values defined below*
autoscaling:
  # -- Wether the hpa is enabled or not
  enabled: false
  # -- How many replicas shout at least exist
  minReplicas: 1
  # -- Maximim number of replicas
  maxReplicas: 100
  # -- When should new replicas be started depending on cpu utilization
  targetCPUUtilizationPercentage: 80
  # -- When should new replicas be started depending on memory utilization
  targetMemoryUtilizationPercentage: ""

# -- Special node affinity settings
affinity: {}

# -- Special node selector settings
nodeSelector: {}

# -- Special tolerations settings
tolerations: []

# -- Special topology settings
topologySpreadConstraints: []
